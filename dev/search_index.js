var documenterSearchIndex = {"docs":
[{"location":"usage/#Usage","page":"Usage","title":"Usage","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"First, follow the instructions in the README file. Only read-on once you have confirmed that the code is working.","category":"page"},{"location":"usage/#Running-the-model","page":"Usage","title":"Running the model","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"To run the model, simply execute ./agni.jl [cfg] where [cfg] is the path to the required configuration file. If [cfg] is not passed, then the default configuration will be used.","category":"page"},{"location":"usage/#Configuration","page":"Usage","title":"Configuration","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"AGNI configuration files are formatted using TOML. There are examples in res/config/.  The default configuration file contains comments explaining the purpose of each parameter, although some are explained in greater detail below. Take care to format the variables in the TOML file correctly. There are no 'default values'. Not all parameters are required in all cases, but the model will return an error naming any parameters which are both necessary and absent.","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Broadly, the configuration files are broken up into four sections:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"[planet] describes the physical characteristics of the planet\n[files] lists input/output files\n[execution] describes what the model should do\n[plots] describes which kind of plot to produce","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Specific parameters:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"solution_type tells the model which state to solve for. The allowed values (integers) are...\n0 : zero flux divergence at fixed tmp_surf, extrapolated tmpl[end]\n1 : zero flux divergence at fixed tmp_surf, constant tmpl[end]\n2 : zero flux divergence, with tmp_surf set such that the conductive skin (CBL) conserves energy flux\n3 : the net upward flux at each layer is equal to flux_eff = sigma * tmp_eff^4\n4 : zero flux divergence and OLR = target_olr\nsolvers tells the model which solvers to use. This is a list of strings, so multiple solvers can be applied sequentially. An empty string is always appended to the end of this list. Allowed solvers are...\n[empty string] : no solving takes place, so the model just calculates fluxes using the initial state\nnewton : the Newton-Raphson algorithm is used\ngauss  : the Gauss-Newton algorithm is used \nlevenberg : the Levenbergâ€“Marquardt algorithm is used \ntimestep : a timestepping method is applied using the Adams-Bashforth method\ninitial_state describes the initial temperature profile applied to the atmosphere. This is a list of strings which are applied in the given order, which allows the user to describe a specific state as required. The descriptors are listed below, some of which take a single argument that needs to immediately follow the descriptor in the list order.\ndry : integrate the dry adiabatic lapse rate from the surface upwards\nstr, arg : apply an isothermal stratosphere at arg kelvin\niso, arg : set the whole atmosphere to be isothermal at arg kelvin\ncsv, arg : set the temperature profile using the CSV file at the file path arg\ncon, arg : apply Clausius-Clapeyron saturation curve for the gas arg\nsat : ensure that no supersaturation occurs at the surface by removing gases as required    \nFor example, setting initial_state = [\"dry\", \"sat\", \"H2O\", \"str\", \"180\"] will set T(p) to follow the dry adiabat from the surface, the water condensation curve above that, and then to be isothermal at 180 K until the top of the model.\nchem_type describes the type of chemistry to implement within the model. This is handled externally by FastChem. You must also provide the path to the FastChem installation directory fastchem_path in the [files] section. The allowed values (integers) are...\n0 : Disabled \n1 : Equilibrium (gas only)\n2 : Equilibrium (condensates retained)\n3 : Equilibrium (condensates rained out)","category":"page"},{"location":"usage/#Outputs","page":"Usage","title":"Outputs","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"Results are optionally plotted and animated, and data will be saved as NetCDF or CSV files. ","category":"page"},{"location":"model/#Model-overview","page":"Model overview","title":"Model overview","text":"","category":"section"},{"location":"model/#Overview","page":"Model overview","title":"Overview","text":"","category":"section"},{"location":"model/","page":"Model overview","title":"Model overview","text":"AGNI models a planetary atmosphere by treating it as a single column (1D) and splitting it up into levels of finite thickness. These levels are defined in pressure-space, and are arranged logarithmically between the surface and the top of the atmosphere. Quantities such as pressure and temperature are calculated at level-centres and level-edges, while energy fluxes are calculated only at the edges, and thermodynamic properties (e.g. heat capacity) are calculated only at their centres.","category":"page"},{"location":"model/#Radiative-transfer","page":"Model overview","title":"Radiative transfer","text":"","category":"section"},{"location":"model/","page":"Model overview","title":"Model overview","text":"Radiative transfer (RT) refers to the transport of radiation energy through a medium subject to the characteristics of the medium. Radiation passing through an atmosphere is absorbed, emitted, scattered, and reflected. In the context of planetary atmospheres, we also have to handle their surfaces, cloud formation, and radiation from the host star.","category":"page"},{"location":"model/","page":"Model overview","title":"Model overview","text":"AGNI models RT using SOCRATES, a numerical code written by the UK Met Office, which is called by using a Julia interface originally written by Stuart Daines (see their branch here). SOCRATES solves the RT equation using a two-stream solution under a plane-parallel approximation. The atmosphere is assumed to be hydrostatically supported and to behave as an ideal gas. Opacity is calculated using the correlated-k approximation, with either random overlap or equivalent extinction used to account for overlapping absorption in mixtures of gases.","category":"page"},{"location":"model/","page":"Model overview","title":"Model overview","text":"For simulating gaseous absorption, the model fits k-terms to spectral absorption cross-section data from DACE. The MT_CKD model is used to estimate continuum absorption cross-sections. Rayleigh scattering and water cloud radiative effects are also included.","category":"page"},{"location":"model/#Convection","page":"Model overview","title":"Convection","text":"","category":"section"},{"location":"model/","page":"Model overview","title":"Model overview","text":"Convection is a process that occurs across more than one spatial dimension, so it must be parameterised within 1D models like AGNI. In fact, it's often parameterised in 3D global circulation models, as resolving convection is numerically difficult. Two convection parameterisations are included within the model: convective adjustment (CA), and mixing length theory (MLT). ","category":"page"},{"location":"model/","page":"Model overview","title":"Model overview","text":"CA forcibly adjusts a convectively unstable region of the atmosphere to the corresponding adiabat, while ensuring that enthalpy is conserved. Only dry adjustment is included in the model. This does not allow the convective energy fluxes to be calculated directly.","category":"page"},{"location":"model/","page":"Model overview","title":"Model overview","text":"MLT directly calculates the energy flux associated with convective heat transport, and thus is the preferred parameterisation within the model. It assumes that parcels of gas are diffused over a characteristic mixing length, transporting energy in the process.","category":"page"},{"location":"model/","page":"Model overview","title":"Model overview","text":"Heat capacities are temperature-dependent, calculated using the Shomate Equation with coefficients derived from the NIST website.","category":"page"},{"location":"model/#Solar-flux","page":"Model overview","title":"Solar flux","text":"","category":"section"},{"location":"model/","page":"Model overview","title":"Model overview","text":"The radiation component requires two boundary conditions the energy. The first is the shortwave downward-directed flux from the star at the top of the atmosphere. This is quantified by the instellation, a scale factor, a grey bond albedo, and the solar zenith angle. All of these may be provided to the model through the configuration file.","category":"page"},{"location":"model/#Solution-types","page":"Model overview","title":"Solution types","text":"","category":"section"},{"location":"model/","page":"Model overview","title":"Model overview","text":"Depending on the system you wish to model, it is necessary to tell AGNI what kind of solution to solve for. There are currently a few options available set by the solution_type variable.   ","category":"page"},{"location":"model/","page":"Model overview","title":"Model overview","text":"(0) Aim to conserve energy fluxes throughout the column. The surface temperature is set at T_s assuming blackbody emission with a fixed surface albedo. The bottom-most temperature value in the column is extrapolated from the rest of the profile.\n(1) Same as 0, but the bottom-most temperature value is fixed equal to T_s.\n(2) Aim to conserve energy fluxes throughout the column. The surface temperature is set by energy transport through a solid conductive boundary layer (CBL) such that T_s = T_m - Fdk, where T_m is the interior mantle temperature, while k and d are material properties. \n(3) Solve for a state such that the flux carried at each level is equal to sigma T_texteff^4. In this case, T_texteff represents the rate at which a planet is losing energy into space. ","category":"page"},{"location":"model/#Obtaining-a-solution","page":"Model overview","title":"Obtaining a solution","text":"","category":"section"},{"location":"model/","page":"Model overview","title":"Model overview","text":"AGNI is designed for modelling planetary atmospheres with high surface pressures and temperatures. This means that the radiative timescale differs by several orders of magnitude across the column, which makes obtaining a solution difficult. The model contains a suite of methods for obtaining a solution.","category":"page"},{"location":"model/#A)-Time-stepping","page":"Model overview","title":"A) Time-stepping","text":"","category":"section"},{"location":"model/","page":"Model overview","title":"Model overview","text":"AGNI implements a multistep Adams-Bashforth integrator to integrate the heating rates at each level over time. This is very robust to the initial conditions provided, but is not able to obtain an energy-conserving solution very quickly. Various optimisations can be used, such as allowing each level to evolve on its own timescale, which provides unphysical intermediate solutions but a physical final state. Time-stepping methods such as these are used in other radiative-convective models (with their own enhancements) such as HELIOS and Exo_k.","category":"page"},{"location":"model/#B)-Solving-a-non-linear-system","page":"Model overview","title":"B) Solving a non-linear system","text":"","category":"section"},{"location":"model/","page":"Model overview","title":"Model overview","text":"To obtain a temperature structure solution that conserves energy more strictly than the time-stepping method, it is possible to construct the model as a system of non-linear equations vecr(vecx). This algorithm obtains the roots of the nonlinear system formed by the flux divergence at each level r, with cell-centre temperatures used as the independent variables x. Finite-difference methods are used to estimate the jacobian matrix in this case. This method has been used in a handful of planetary radiative-convective models (e.g. ATMO), but is more commonly used by the stellar physics community. Currently implemented solvers: Newton-Raphson, Gauss-Newton, and Levenberg-Marquardt.","category":"page"},{"location":"model/#Other-features","page":"Model overview","title":"Other features","text":"","category":"section"},{"location":"model/","page":"Model overview","title":"Model overview","text":"AGNI can calculate emission spectra, provided with T(p) and the volume mixing ratios of the gases. This is performed using the same RT as the RCE calculations, so is limited in resolution by the choice of correlated-k bands. Similarly, the the contribution function can also be calculated.","category":"page"},{"location":"model/#Julia-and-Fortran","page":"Model overview","title":"Julia and Fortran","text":"","category":"section"},{"location":"model/","page":"Model overview","title":"Model overview","text":"AGNI is primarily written in Julia, while SOCRATES itself is written in Fortran. Julia was chosen because it allows the SOCRATES binaries to be included in the precompiled code, which significantly improves performance.","category":"page"},{"location":"examples/#Example-outputs","page":"Example outputs","title":"Example outputs","text":"","category":"section"},{"location":"examples/#Pure-steam-runaway-greenhouse-effect","page":"Example outputs","title":"Pure steam runaway greenhouse effect","text":"","category":"section"},{"location":"examples/","page":"Example outputs","title":"Example outputs","text":"By assuming the atmosphere temperature profile follows a dry adiabat from the surface and then water vapour-condensate coexistance curve defined by the Clausius-Claperyron relation at lower pressures, we see a characteristic relationship between OLR and the surface temperature (T_s). Initially OLR increases with T_s, but as the condensing layer (which is independent of T_s) starts to dominate the photosphere,  OLR and T_s decouple. Eventually the atmosphere reaches a dry post-runaway state, and OLR increases rapidly with T_s once more.","category":"page"},{"location":"examples/","page":"Example outputs","title":"Example outputs","text":"  <img src=\"assets/runaway/curve.png\" width=80% class=\"center\"/>","category":"page"},{"location":"examples/#Prescribed-dry-adiabat","page":"Example outputs","title":"Prescribed dry adiabat","text":"","category":"section"},{"location":"examples/","page":"Example outputs","title":"Example outputs","text":"In this case, radiative fluxes (right) are calculated according to a temperature profile (left), which follows a dry adiabat from the surface to the top of the atmosphere. Because the temperature profile is entirely prescribed, the fluxes are not balanced locally or globally across the column.","category":"page"},{"location":"examples/","page":"Example outputs","title":"Example outputs","text":"  <img src=\"assets/nosolve/pt.png\" width=45% class=\"center\"/> \n  <img src=\"assets/nosolve/fl.png\" width=45% class=\"center\"/> ","category":"page"},{"location":"examples/#Radiative-convective-solution","page":"Example outputs","title":"Radiative-convective solution","text":"","category":"section"},{"location":"examples/","page":"Example outputs","title":"Example outputs","text":"The temperature profile (left) is solved such that energy is globally and locally conserved (see fluxes, right). Convection is parameterised using mixing length theory in this case, allowing the system to be solved using a Newton-Raphson method. ","category":"page"},{"location":"examples/","page":"Example outputs","title":"Example outputs","text":"  <img src=\"assets/withsolve/pt.png\" width=45% class=\"center\"/> \n  <img src=\"assets/withsolve/fl.png\" width=45% class=\"center\"/> ","category":"page"},{"location":"examples/","page":"Example outputs","title":"Example outputs","text":"We can then plot the outgoing emission spectrum (left) and normalised contribution function (right). The spectrum clearly demonstrates complex water absorption features, but reproduces blackbody emission at longer wavelengths. The normalised contribution function quantifies how much each pressure level contributes to the outgoing emission spectrum at a given wavelength; this is then plotted versus wavelength and pressure. ","category":"page"},{"location":"#AGNI","page":"AGNI","title":"AGNI","text":"","category":"section"},{"location":"","page":"AGNI","title":"AGNI","text":"Radiative convective solver by Harrison Nicholls ","category":"page"},{"location":"","page":"AGNI","title":"AGNI","text":"AGNI is a computer code for modelling the atmospheres of hot terrestrial (exo)planets. Its primary purpose is to solve for the atmospheric temperature structure at radiative-convective equilibrium while coupling to an interior model.","category":"page"},{"location":"","page":"AGNI","title":"AGNI","text":"The model itself is currently proprietary. I will be made available under the BSD 3-Clause Clear License once published in a journal. Do not publish with the model before such a time; it is undergoing active development.","category":"page"},{"location":"","page":"AGNI","title":"AGNI","text":"See the other wiki pages for information on installing the code, running the code, and obtaining results. The content of this wiki is outlined on the right hand side of this web page.","category":"page"},{"location":"","page":"AGNI","title":"AGNI","text":"Pronounced: ag-nee. Named after the fire deity of Hinduism.","category":"page"}]
}
