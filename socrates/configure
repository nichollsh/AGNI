#!/usr/bin/env bash
# Script to generate Mk_cmd for socrates

# Remove old files
rm -rf "bin/"
rm -f "set_rad_env"
rm -f "sbin/Cgen_null"
rm -f "sbin/Cinc_field"
rm -f "sbin/Cscale_field"

# Prepare Mk_cmd file 
genpath="make/Mk_cmd"
rm -f $genpath

#    header 
echo "# Generated automatically" >> $genpath 
echo "# System: $(uname -a) " >> $genpath
echo "# Date: $(date) " >> $genpath
echo " " >> $genpath

#    compiler and linker 
fc="$(command -v gfortran)"
if [ -z "$fc" ]; then 
    echo "Cannot find gfortran"
    exit 1
fi
if  [[ "$OSTYPE" == "darwin"* ]]; then
    extra="-L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib/"
else 
    extra=""
fi 
echo "FORTCOMP        = $fc -O3 -fPIC $extra -c " >> $genpath
echo "LINK            = $fc -O3 -fPIC $extra " >> $genpath

ar="$(command -v ar)"
if [ -z "$ar" ]; then 
    echo "Cannot find ar"
    exit 1
fi
echo "LIBLINK         = $ar rvu " >> $genpath

#    NetCDF paths
nf="$(command -v nf-config)"
if [ -z "$nf" ]; then 
    echo "Cannot find nf-config"
    exit 1
fi 
cdfinc="$($nf --includedir) $($nf --fflags)"
echo "INCCDF_PATH     = $cdfinc " >> $genpath
cdflib="$($nf --flibs | cut -d " " -f 1 | tail -c +3)"
echo "LIBCDF_PATH     = $cdflib " >> $genpath
echo "LIBCDF_NAME     = netcdff " >> $genpath

#    OpenMP flag
echo "OMPARG          = -fopenmp " >> $genpath

#    other things
echo " " >> $genpath 
echo "LIBSUFFIX       = a " >> $genpath
echo " " >> $genpath
echo ".SUFFIXES: \$(SUFFIXES) .f90 " >> $genpath 
echo " " >> $genpath

# End 
exit 0
